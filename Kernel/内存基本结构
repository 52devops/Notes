在Unix系统中内存分为三个不同的地址：
	1.逻辑地址(Logical address):逻辑上存在，在用户态时，能够被程序代码直接调用的内存地址。
	2.线性地址(Linear address):启动分页机制，线性地址是逻辑层到物理地址变化中的中间层
	3.物理地址(Physical address):内存芯片级内存单元寻址，内存的物理单元。

转换关系：
	内存控制单元(MMU)将逻辑地址通过“分段单元”(segment unit )转换为线性地址，"分页单元"(paging unit)硬件电路将线性地址转换为物理地址。

Unix系统提供了一层叫做“虚拟内存”的逻辑内存层，处于应用程序的内存请求和硬件内存管理单元（Memory management Unit，MMU）之间。有了虚拟内存可以实现：
	1.若干个进程并发执行
	2.应用程序所需内存大于物理内存也能运行（只有到真正需要时，才会真正分配内存页）
	3.因为虚拟内存是底层物理内存的映射，因此可以通过其将进程重定位到物理内存的任意位置

虚拟内存子系统主要成分为虚拟地址空间。CPU自带一个将内存逻辑地址转换为物理地址的硬件电路，并且有一组页表来表示虚拟与实际的对应关系。
Unix将RAM分为两部分，一部分是系统占用（内核代码和内核数据结构），另一部分是由虚拟内存处理。而32位和64位的内存架构是不同的，其架构组成部分如下所示
	DMA：内存中小于16MB的区域，历史原因。曾经有些硬件只能运行在该区域
	DMA32：内存低于4G的区域，只存在与64位架构上。在32位到64位过渡时期，有些只能运行在该区域
	Normal：64位机器上，大于4G的区域全都是该块。32位机器上，从16MB-896MB的区域是该快（历史原因）
	HighMem：只存在32位系统，4G区域。

逻辑地址由两部分组成：一个段标识符和一个指定段内相对地址的偏移量(offset)
“段标识符”是一个16位长的字段，称为段选择符(Segment selector)，其作用类似段的名字由 索引号、TI(表指示器，表明该段来自哪一张表)、RPL(请求者特权级，用来描述用户态还是内核态)组成。
“偏移量”是一个32位长的字段
除了“段标识符”外还有一个8字节的“段描述符”，描述段特征。端描述符放在“全局描述符表(Global Descriptor Table,GDT)”或“局部描述符表(Local Descriptor Table,LDT)”中。通常情况下，一个CPU只有一个GDT，LDT是每个进程放在GDT后附加的段，属于自己的表。
处理器提供段寄存器，用来存放段选择符，从而能够快速的查找到段选择符。
在逻辑地址与线性地址进行转换时，可以通过非编程寄存器（不能被程序员所设置的寄存器），段选择符放在该寄存器后 就不需要访问GDT或LDT.
	

