开启多prospector
filebeat.prospectors:
- type: log
    paths:
- type: log1
    paths:
      - /var/log/*/*.log 该路径不包括/var/log/*的文件

目前type类型
	log、stdin、redis
paths:
	存放日志的目录地址

recursive_glob:
	默认关闭，开启后 **会拓展  foo** --> foo/ foo/*   foo/*/*  一个 ** 能扩张深度为8

encoding:
	读文件的编码

exclude_lines:
	排除的行，正则。如果开启了multiline，会在组成单独的一行前，进行过滤。下同
	https://www.elastic.co/guide/en/beats/filebeat/master/regexp-support.html

include_lines:
	保留的行，默认全保留。

如果上述都开启，那么先  include 再 exclude

exclude_files:
	排除的文件，

tags:
	会给指定的一系列内容打上tag，便于处理
	example:
		filebeat.prospectors:
		- paths: ["/var/log/app/*.json"]
		  tags: ["json"]

fields:
	可以为输出信息加入的 字段信息。能够方便过滤。
	标量, 数组, 目录, 任意深度嵌套都可以。
	e.x
	 filebeat.prospectors:
	 - paths: ["/var/log/app/*.log"]
	   fields:
	     app_id: query_engine_12
	上面的例子是目录方式，位于fields的子目录下，如果要让用户定义字段 成为 根 字段  要开启 fields_under_root

ignore_older:
	该值能够防止很早以前的日志修改后，触发再次传送。指定一个时间字符 例如 2h
	该值要大于 close_inactive

close:
	有各种close类别，是根据对其日志收集完后的时间来做判据

json:
	将JSON格式信息解码。filebeats是论行处理，如果没一行都是一个JSON对象，那么就正好解析了。解码在行和多行过滤之前
	ex:
	  json.keys_under_root: true
          json.add_error_key: true
          json.message_key: log 

keys_under_root:
	默认json数据解码后，会在document段放一个json标签，如果开启这个值，会在消息最顶层放置。

add_error_key:
	会将哪些带 log关键字，但不能解析的信息中加上 error.message" and "error.type: json的字段

message_key:
	用于行和多行过滤的顶级关键字，必须是一串字符。否则会引起差错

multiline:
	开启多行模式

tail_files:
	开启后就从文件尾开始读文件。该模式要移除原有registry。

spool_size:
	spool的大小。
https://www.elastic.co/guide/en/beats/filebeat/master/configuration-filebeat-options.html
