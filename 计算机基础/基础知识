冯诺依曼结构：
	1.存放数据和指令的内存单元
	2.对数据执行算术和逻辑运算的算术单元
	3.计算机输入单元
	4.计算机输出单元
	5.作为监督的控制单元
执行指令的步骤：
	1.读取下一条指令
		控制单元 从 程序计数器中拿去下一条指令的地址，并将副本放入指令寄存器中，在进行执行指令周期前，程序计数器必须更新		，因为指令连续存在内存中，所以将程序计数器中的地址加一即可。
	2.译解指令(翻译为机器码)
	3.如果需要，读取数据
	4.执行指令
FSB:前端总线
Ghz:十亿
控制单元：两种特殊寄存器---指令寄存器(IR),程序计数器(PC)。IR存放正在执行的指令，PC存放下一条要执行的指令地址。这两种统称为 中央处理器(CPU)
总线带宽：可以在总线上并行传输的位数。
内存：由多个存储单元(每个存储单元能存放0或1)组成的集合。每个存储单元有唯一的物理地址。
缓存：内存比CPU处理速度慢，因此需要有缓存来存储常用的数据。----小容量内存。
流水线：将指令分解为可重复叠加执行的小步骤技术。
8位(比特)一字节，2字节为已字

并行计算：
   四种形式
	1.比特级
	2.指令级：对程序的某些执行能够同时独立进行
	3.数据级：同一组指令集对不同数据集进行操作
	4.任务级：不同处理器能在相同不同数据集上执行不同操作

栈：先进后出，只有一个口。类似试管
队列：一端进，一段出。先进先出。
列表：链式结构
树：拥有分层结构。
二叉树：每个节点可以有两个后继节点，每个节点都只有一个父母节点。
二叉检索树：有序的二叉树，左边节点值小于父母节点，右边节点值大于父母节点。
根：树的起点
叶节点：没有子女的树节点
- 十六进制-hex `0x10 0X10`
- 八进制-octal `0
- 十进制-dec
`
CPU几种架构(解决多CPU共同工作的架构)：
	NUMA：
		每个处理器有自己的存储器，每个也可以访问其他存储器。访问自己的存储器比访问其它存储器效率高10-100倍。所以NUMA调优的做法就是使处理器访问自己的存储器，
		可以通过numactl这个包对NUMA架构做出调整。系统默认NUMA架构为自动均衡，关闭均衡 “echo 0 >/proc/sys/kernel/numa_balancing”
	SMP（UMA）：
		最早的架构。多个CPU通过一个总线访问存储，因此处理器只能为内存的每个数据保存或共享唯一的数值。容易出现存储瓶颈，性能与存储直接挂钩
	MPP：
		将存储变为了分布式存储器模式，一个分布式存储器具有多个节点，每个节点都有自己的存储，可以配置为SMP模式，也可以为非SMP。多个节点相互连接就形成总系统

KSM:合并相同内存页，即使不是同一NUMA节点。关闭跨节点合并 /sys/kernel/mm/ksm/merge_across_nodes=0。可在线操作，能够逐步合成或逐步释放，内存不足临时打开也是可以的。
如果需要完全关闭该功能，那么关闭ksm、ksmtuned服务即可。
该路径下有ksm的使用情况/sys/kernel/mm/ksm
对于该服务建议不要开启
1.会增加对内存扫描，增加CPU负担
2.内存不足时，增加swap交互。导致性能严重下降
